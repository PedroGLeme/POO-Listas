Versão do G++:
g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Varificando data de envio...
AGORA: 2024-11-09 15:23:33.752318-03:00
PRAZO MÁXIMO: 2024-11-13 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp"  > comp.log 2>&1
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp"  > comp.log 2>&1
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 1.0
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp"  > comp.log 2>&1
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5 deu errado! +0.049
O resultado para
#include<iostream>
int main() {
    Vetor v(15, -1);
    v = v + Vetor(-49, 36);
    v = v - Vetor(45, 26);
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-47,38)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-39,33)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-70,-64)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(-5,-46)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v + Vetor(79, -1);
    std::cout << (v * Vetor(45,37)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(-63, -87);
    std::cout << (v * Vetor(-90,-82)) << std::endl;
    v = v - Vetor(-78, -98);
    v = v + Vetor(-65, -46);
    v = v - Vetor(-28, 9);
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    v = v + Vetor(-72, 49);
    std::cout << (v * Vetor(-25,43)) << std::endl;
    v = v - Vetor(-76, 65);
    std::cout << (v ^ Vetor(45,-9)) << std::endl;
    std::cout << (v * Vetor(-13,4)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v * Vetor(-24,-96)) << std::endl;
    std::cout << (v ^ Vetor(-24,34)) << std::endl;
    v = v - Vetor(96, 54);
    std::cout << (v * Vetor(42,89)) << std::endl;
    std::cout << (v < Vetor(-69,1)) << std::endl;
    std::cout << (v * Vetor(35,-93)) << std::endl;
    std::cout << (v ^ Vetor(-47,-71)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v + Vetor(26, 58);
    std::cout << (v < Vetor(86,-84)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v * Vetor(45,83)) << std::endl;
    v = v + Vetor(39, -43);
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(-11,37)) << std::endl;
    v = v + Vetor(25, 82);
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    v = v - Vetor(-33, 82);
    std::cout << (v < Vetor(-24,-45)) << std::endl;
    v = v - Vetor(45, 71);
    std::cout << (v * Vetor(-13,20)) << std::endl;
    std::cout << (v < Vetor(-63,33)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v * Vetor(98,-5)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-33,15)) << std::endl;
    v = v - Vetor(-54, -45);
    std::cout << v << std::endl;
    v = v - Vetor(-11, -5);
    v = v + Vetor(36, 99);
    std::cout << (v < Vetor(-99,-56)) << std::endl;
    std::cout << (v * Vetor(25,51)) << std::endl;
    std::cout << (v ^ Vetor(14,-29)) << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(100,-29)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v < Vetor(17,55)) << std::endl;
    v = v + Vetor(27, -99);
    std::cout << v.abs() << std::endl;
    v = v + Vetor(85, 24);
    std::cout << (v * Vetor(3,61)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(89, -83);
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-80,53)) << std::endl;
    v = v + Vetor(6, -38);
    std::cout << (v < Vetor(-93,14)) << std::endl;
    v = v + Vetor(-64, 19);
    std::cout << v << std::endl;
    std::cout << (v < Vetor(60,-94)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-11,44)) << std::endl;
    std::cout << (v * Vetor(75,15)) << std::endl;
    v = v - Vetor(-47, -93);
    return 0;
}
deveria ser
79.51100552753688
(-79,9)
-2579
(-79,9)
-2256
(-79,9)
48.93557606818957
79.51100552753688
3679
79.51100552753688
296
8.0
-13460
(104,138)
172.80046296234278
(104,138)
7241
-6462
-916
(108,122)
-14304
6600
6556
99.17766431518332
-5904
2344
69.05070600652827
117.5433189567448
(38,126)
12168
113.21660655575224
59.40948594733815
193.98195792392653
(102,165)
149.65630345401206
-930
144.75938126766988
(90,12)
8760
(90,12)
1746
(144,57)
169.3663468492118
12986
-7793
(191,161)
249.8039231077046
56.30076798425847
(191,161)
32.69548741577734
226.645097012929
6155
314.96825236839345
(214,169)
24862
140.66723455755687
(156,150)
101.32669379373117
(156,150)
8514
13950

mas deu
79.511
(-79,9)
-2579
(-79,9)
-2256
(-79,9)
48.9356
79.511
3679
79.511
296
8
-13460
(104,138)
172.8
(104,138)
7241
-6462
-916
(108,122)
-14304
6600
6556
99.1777
-5904
2344
69.0507
117.543
(38,126)
12168
113.217
59.4095
193.982
(102,165)
149.656
-930
144.759
(90,12)
8760
(90,12)
1746
(144,57)
169.366
12986
-7793
(191,161)
249.804
56.3008
(191,161)
32.6955
226.645
6155
314.968
(214,169)
24862
140.667
(156,150)
101.327
(156,150)
8514
13950

Teste 6 deu errado! +0.048
O resultado para
#include<iostream>
int main() {
    Vetor v(68, 46);
    v = v + Vetor(9, 46);
    std::cout << v << std::endl;
    v = v + Vetor(-77, 81);
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    v = v + Vetor(21, 2);
    std::cout << (v < Vetor(-80,45)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(96, -95);
    v = v + Vetor(90, 8);
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(100,68)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(65,-17)) << std::endl;
    std::cout << (v ^ Vetor(-60,71)) << std::endl;
    std::cout << (v * Vetor(4,-10)) << std::endl;
    std::cout << (v ^ Vetor(42,-86)) << std::endl;
    v = v - Vetor(-87, 71);
    v = v + Vetor(-30, 89);
    std::cout << (v ^ Vetor(-1,83)) << std::endl;
    v = v - Vetor(-16, -2);
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-85,-36)) << std::endl;
    std::cout << (v * Vetor(3,6)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(48, 61);
    v = v + Vetor(52, -2);
    std::cout << (v ^ Vetor(-75,95)) << std::endl;
    std::cout << v << std::endl;
    std::cout << (v * Vetor(-65,-8)) << std::endl;
    v = v - Vetor(90, 100);
    v = v + Vetor(55, -41);
    std::cout << (v ^ Vetor(23,-92)) << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(71,-95)) << std::endl;
    std::cout << (v * Vetor(72,59)) << std::endl;
    std::cout << (v < Vetor(-84,-85)) << std::endl;
    v = v - Vetor(57, 28);
    std::cout << (v < Vetor(-40,71)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(-30,94)) << std::endl;
    v = v - Vetor(30, 51);
    std::cout << v.abs() << std::endl;
    v = v + Vetor(61, 94);
    std::cout << (v ^ Vetor(-82,61)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << (v * Vetor(-16,-40)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(77,-33)) << std::endl;
    v = v + Vetor(-23, -74);
    std::cout << v.abs() << std::endl;
    std::cout << (v * Vetor(67,96)) << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v * Vetor(-23,-88)) << std::endl;
    v = v - Vetor(91, 11);
    std::cout << (v ^ Vetor(-74,-62)) << std::endl;
    v = v + Vetor(44, 88);
    v = v - Vetor(90, 11);
    v = v + Vetor(12, 21);
    return 0;
}
deveria ser
(77,92)
(0,173)
173.0
67.48501986983968
176.2554963681984
278.40438214941946
52.69579387798763
278.40438214941946
(15,278)
278.40438214941946
101.56824712618545
17745
-2720
-12966
6272
(88,298)
129.40606322128227
2052
310.72174046886386
26365
(92,235)
-7860
-7406
(57,94)
109.9317970379817
-12089
9650
166.57093387296845
29.396052854943253
66.0
17.700427788667206
33.54101966249684
10829
113.3225485064645
(31,109)
-4856
113.3225485064645
(31,109)
113.3225485064645
-9416
35.90264614203248
3896
(8,35)
35.90264614203248
-3264
6922

mas deu
(77,92)
(0,173)
173
67.485
176.255
278.404
52.6958
278.404
(15,278)
278.404
101.568
17745
-2720
-12966
6272
(88,298)
129.406
2052
310.722
26365
(92,235)
-7860
-7406
(57,94)
109.932
-12089
9650
166.571
29.3961
66
17.7004
33.541
10829
113.323
(31,109)
-4856
113.323
(31,109)
113.323
-9416
35.9026
3896
(8,35)
35.9026
-3264
6922

Teste 7: correto! +0.050
Teste 8 deu errado! +0.043
O resultado para
#include<iostream>
int main() {
    Vetor v(-1, 3);
    std::cout << v << std::endl;
    v = v + Vetor(1,2);
    std::cout << v << std::endl;
    v = v + Vetor(1,2);
    std::cout << v << std::endl;
    v = v - Vetor(1,6);
    std::cout << v << std::endl;
    std::cout << v * Vetor(3, 2) << std::endl; 
    std::cout << (v ^ Vetor(-4501,9002)) << std::endl;
    std::cout << v.abs() << std::endl;
    return 0;
}

deveria ser
(-1,3)
(0,5)
(1,7)
(0,1)
2
4501
1.0
mas deu
(-1,3)
(0,5)
(1,7)
(0,1)
2
4501
1

Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16 deu errado! +0.049
O resultado para
#include<iostream>
int main() {
    Vetor v(86, 9);
    std::cout << (v * Vetor(-95,77)) << std::endl;
    std::cout << (v < Vetor(-28,66)) << std::endl;
    std::cout << (v ^ Vetor(57,-85)) << std::endl;
    std::cout << (v * Vetor(-67,81)) << std::endl;
    std::cout << (v < Vetor(94,-72)) << std::endl;
    v = v + Vetor(56, -12);
    std::cout << v.abs() << std::endl;
    v = v - Vetor(-12, 73);
    v = v + Vetor(-58, 57);
    std::cout << (v < Vetor(50,51)) << std::endl;
    v = v + Vetor(-78, 75);
    std::cout << (v ^ Vetor(-73,16)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-23,75)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(-66, -55);
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-20,52)) << std::endl;
    std::cout << (v * Vetor(36,68)) << std::endl;
    std::cout << (v ^ Vetor(-62,52)) << std::endl;
    v = v + Vetor(-92, 60);
    std::cout << (v ^ Vetor(-48,86)) << std::endl;
    v = v - Vetor(40, -34);
    std::cout << v << std::endl;
    v = v + Vetor(55, 14);
    v = v - Vetor(73, -87);
    std::cout << (v < Vetor(23,85)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v * Vetor(4,11)) << std::endl;
    v = v + Vetor(89, 65);
    std::cout << (v < Vetor(-66,66)) << std::endl;
    v = v - Vetor(-6, 36);
    std::cout << (v < Vetor(-40,-20)) << std::endl;
    std::cout << v << std::endl;
    v = v + Vetor(-57, 59);
    std::cout << (v * Vetor(45,-85)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(-79,25)) << std::endl;
    v = v - Vetor(92, 3);
    std::cout << (v < Vetor(91,-29)) << std::endl;
    std::cout << (v * Vetor(45,66)) << std::endl;
    std::cout << (v ^ Vetor(-99,89)) << std::endl;
    std::cout << (v < Vetor(-14,-14)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(86,-45)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(-48,53)) << std::endl;
    v = v - Vetor(-39, -2);
    std::cout << v << std::endl;
    v = v + Vetor(91, 47);
    std::cout << (v < Vetor(-88,-17)) << std::endl;
    v = v + Vetor(10, -7);
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-40,-50)) << std::endl;
    v = v + Vetor(-12, 49);
    v = v - Vetor(-90, 23);
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-11,39)) << std::endl;
    std::cout << (v * Vetor(80,-91)) << std::endl;
    std::cout << (v ^ Vetor(-18,3)) << std::endl;
    std::cout << (v < Vetor(1,68)) << std::endl;
    v = v + Vetor(-40, -22);
    std::cout << (v < Vetor(54,-58)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(-92,-3)) << std::endl;
    std::cout << (v < Vetor(71,-26)) << std::endl;
    std::cout << (v * Vetor(98,-62)) << std::endl;
    std::cout << (v < Vetor(-23,-81)) << std::endl;
    v = v + Vetor(-91, 87);
    std::cout << (v ^ Vetor(79,43)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v < Vetor(-81,13)) << std::endl;
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(85,-40)) << std::endl;
    std::cout << v << std::endl;
    return 0;
}
deveria ser
-7477
107.01439351560002
-7823
-5033
43.424901518217354
142.03168660548954
56.76237783615791
4376
58.82176467941097
(18,56)
34.867919886632585
58.82176467941097
(84,111)
6588
10572
11250
7520
(-48,205)
27.312442043664376
313.03673905789395
3102
48.547489380196616
121.5126500360678
(29,335)
-34750
394.9936708353692
30426
124.73763991854975
20406
28029
117.93846878010375
409.0
134.68260620297178
409.0
25.104357763797225
(-81,393)
102.23576945833466
433.4616476690873
(20,433)
143.98476844502653
(98,459)
27.803299960003844
-33929
8556
11.209602035810402
129.4851202530474
440.83216761030496
40030
102.55230005323565
-21410
171.70836008155288
-42815
525.0380938560554
77.27857427422465
(-33,524)
525.0380938560554
-43220
(-33,524)

mas deu
-7477
107.014
-7823
-5033
43.4249
142.032
56.7624
4376
58.8218
(18,56)
34.8679
58.8218
(84,111)
6588
10572
11250
7520
(-48,205)
27.3124
313.037
3102
48.5475
121.513
(29,335)
-34750
394.994
30426
124.738
20406
28029
117.938
409
134.683
409
25.1044
(-81,393)
102.236
433.462
(20,433)
143.985
(98,459)
27.8033
-33929
8556
11.2096
129.485
440.832
40030
102.552
-21410
171.708
-42815
525.038
77.2786
(-33,524)
525.038
-43220
(-33,524)

Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20 deu errado! +0.048
O resultado para
#include<iostream>
int main() {
    Vetor v(-86, -52);
    std::cout << (v ^ Vetor(56,17)) << std::endl;
    std::cout << (v * Vetor(-18,9)) << std::endl;
    std::cout << (v ^ Vetor(-28,-58)) << std::endl;
    std::cout << (v * Vetor(-35,-2)) << std::endl;
    std::cout << (v < Vetor(-4,-36)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v - Vetor(39, -34);
    std::cout << v << std::endl;
    v = v + Vetor(-99, 48);
    std::cout << v.abs() << std::endl;
    std::cout << v << std::endl;
    std::cout << (v < Vetor(-93,-3)) << std::endl;
    v = v + Vetor(-34, 17);
    std::cout << (v * Vetor(-100,-72)) << std::endl;
    std::cout << v.abs() << std::endl;
    v = v + Vetor(-84, 20);
    std::cout << v.abs() << std::endl;
    std::cout << (v ^ Vetor(54,-27)) << std::endl;
    std::cout << (v < Vetor(-22,25)) << std::endl;
    std::cout << v.abs() << std::endl;
    std::cout << (v * Vetor(-96,50)) << std::endl;
    std::cout << (v < Vetor(-98,-71)) << std::endl;
    std::cout << (v * Vetor(92,-35)) << std::endl;
    std::cout << v << std::endl;
    v = v + Vetor(26, -4);
    std::cout << v << std::endl;
    std::cout << v.abs() << std::endl;
    v = v + Vetor(53, -48);
    std::cout << v << std::endl;
    std::cout << (v ^ Vetor(-42,-74)) << std::endl;
    v = v + Vetor(1, 50);
    std::cout << (v < Vetor(57,72)) << std::endl;
    std::cout << v << std::endl;
    v = v - Vetor(-78, -63);
    std::cout << (v < Vetor(60,68)) << std::endl;
    return 0;
}
deveria ser
1450
1080
3532
3114
52.50050374574571
100.4987562112089
(-125,-18)
226.0
(-224,30)
9.475759934575313
22416
262.24606765402604
348.501076038511
5616
37.56799001482663
348.501076038511
36182
47.00717896455027
-33809
(-342,67)
(-316,63)
322.21886971436044
(-263,15)
20092
114.43419918170345
(-262,65)
96.59917646804585

mas deu
1450
1080
3532
3114
52.5005
100.499
(-125,-18)
226
(-224,30)
9.47576
22416
262.246
348.501
5616
37.568
348.501
36182
47.0072
-33809
(-342,67)
(-316,63)
322.219
(-263,15)
20092
114.434
(-262,65)
96.5992

Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp"  > comp.log 2>&1
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.051
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19 deu errado!
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    
    Polinomio2 p2(1,1);
    v = p2.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    return 0;
}

deveria ser
1 0
4
2 -1 0
6
mas deu
0 
4.45551e+09
2 -8.40862e+08 -8.40831e+08 
5.07802e+09

Teste 20: correto! +0.050
Nota exercicio 4: 1.0
Procurando exercício 5...
Exercício 5...
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp"  > comp.log 2>&1
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Exercício 6...
Compilando...
g++ -O2 -Wno-unused-result  "ex6.cpp"  > comp.log 2>&1
Teste 1 deu errado! +0.017
O resultado para
#include<iostream>
int main() {
    BigInt a("999999999999999999999999999");
    std::cout << a << std::endl;
    BigInt b(1);
    std::cout << b << std::endl;
    BigInt c = a+b;
    std::cout << c << std::endl;
    std::cout << a*2 << std::endl;
    std::cout << c*2 << std::endl;
    std::cout << a*2-c*2 << std::endl;
    return 0;
}
deveria ser
999999999999999999999999999
1
1000000000000000000000000000
1999999999999999999999999998
2000000000000000000000000000
-2
mas deu
999999999999999999999999999

1

1000000000000000000000000000

1999999999999999999999999998

2000000000000000000000000000

-999999999000000000000000000000000001


Teste 2 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(6787518);
    a = a + BigInt(-1532912765);
    a = a * BigInt(2113939524);
    a = a / (-646023694);
    a = a + BigInt(755968415);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(-715136506);
    a = a / (1243087953);
    a = a + BigInt(270890292);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(-863392068);
    a = a + BigInt(814556066);
    a = a * BigInt(-626624727);
    a = a / (-115655409);
    a = a + BigInt(-48795908);
    a = a - BigInt(509952704);
    a = a / (-1612768534);
    return 0;
}
deveria ser
5749804567
270890297

mas deu
ooi5

ooi5

ooiooi
Teste 3 deu errado! +0.025
O resultado para
#include<iostream>
int main() {
    BigInt a(-6480484);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(1740815194);
    std::cout << a << std::endl;
    a = a ^ BigInt(22);
    a = a + BigInt(811285593);
    std::cout << a << std::endl;
    a = a - BigInt(-1794039656);
    a = a / (-881395209);
    a = a + BigInt(-430749466);
    a = a - BigInt(500120787);
    std::cout << a << std::endl;
    a = a * BigInt(-1628108695);
    a = a + BigInt(1618655627);
    a = a - BigInt(-58892205);
    return 0;
}
deveria ser
6480484
-11281325011673896
141880414519513146120487188339384094998606270898324969435296717420675494380472617129461525835236345837573121303995911731191953124211542729705041465834815931657813206230924215416251553665335765101894232823579802715211725462343790137102423619660113914246901944558548950831506503537606427038846357974685426598266189489919917759085872553913646017984373406809
-160972527500445201671713634580675483338832479288329067188402106938018872735298266330219552889850511812315877137920671101800773600769076485534925872095154458296826533159569529060432587018221204220199287268396988433382470839302905873978291184085746391034560235008662216169938930922423957762682095512372392074423210859454442256998781296886385143225

mas deu
6480484

-1128132511673896

22002

ooi-22002


Teste 4 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-11530675);
    a = a ^ BigInt(12);
    a = a - BigInt(1660419914);
    a = a * BigInt(-1660131191);
    a = a / (-1468892013);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a ^ BigInt(25);
    a = a + BigInt(-199446994);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-61803088);
    a = a / (-148886608);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(581197254);
    std::cout << a.abs() << std::endl;
    return 0;
}
deveria ser
6243229746681477564471750121484066730155378799634439864616837857064997761566248286466
6243229746681477564471750121484066730155378799634439864616837857064997761566248286466
6243229746681477564471750121484066730155378799634439864616837857064997761566248286466
76777315721503183064017366765299723656761125093512503497005292187146742010943349022873330530940649744355489728512386725117760639499377703065881157126541721981294090654308298122400518030531954790780329694094518365104601843578216612855388792500020118971148671687507864421999052799286189582783106721409847577266188453444010652178608885913821489053031918344961723595377531863626687720025304613661164943137398184741194981555481768385483121331758002256338595458225460605795141631268117660398553949770266414614176945429169755643626834469750001906076367410030292751878164713276245983523478795672581361151925647943264086670339509929097093952310388735342907351284535641610059299731448969651212327738953603604577060454123505951138761811189899415998807460015693772079952309664427062197509292745236133079571039857256965619609590094274483176079201295767957957978526088436613096885643425224756167985750672889299034033085590166601159398567436984684911247118461443137977752444021178467610942373668893174315752301710000949835425458753286244347996560766866240484093053456719742254274538629680680159964514908483518365286239202192859251924981646361002448830027506098771725017020280910594999668166083136156901434281893588669388067882213590604060615706984268081585398533559850284259318264777941745954477587202474602518040181259817774581222261726359918528379231135712610300898332464679093676814377864280418014376480319597094173679350037231265576908095875601061398777392159055107724719924961526201677032551056451253018475610436310839873301659843851449199006898417365823412464766662020922082396408872660591264809189160181837870514557331446321614079457896349010623921968738601736936372944575739874252655070822151872040506625096717894773989907841149525442449833072840051480646166674529547712954409413785124248922975755525138418471331005841623244613442865014831139800609188952835730828042587070412885942000596344448770867390509118982642098423327199769029230467974229455847102848708421964978878547809882076028907481970886683160612939766493005452907142452183766456103436787793584100962750477631256606218449454746059900934823384247833526614764799438382



mas deu
ooi21856

21856

21856

1000000000

ooi5

5


Teste 5 deu errado! +0.025
O resultado para
#include<iostream>
int main() {
    BigInt a(19050923);
    a = a + BigInt(2071820853);
    a = a * BigInt(127318960);
    std::cout << a << std::endl;
    a = a ^ BigInt(29);
    std::cout << a << std::endl;
    a = a / (1084252841);
    a = a * BigInt(-613323959);
    a = a / (-456992071);
    a = a * BigInt(-218847459);
    a = a + BigInt(100022262);
    a = a * BigInt(922540157);
    a = a - BigInt(-852211676);
    std::cout << a << std::endl;
    a = a - BigInt(-2051008127);
    a = a + BigInt(226956622);
    a = a - BigInt(1659275752);
    a = a * BigInt(-928301364);
    a = a + BigInt(1110450525);
    std::cout << a << std::endl;
    a = a + BigInt(-173027092);
    return 0;
}
deveria ser
266207620013672960

-5360082608974716718233542278812885209715680934670653725303081462531699493124693784154411555945203845475418752836728051019333391659478411221240772144971403363124042706249646788520608708750240125227659333217565723859980128164729950282892349398326477629547389996493937337235220988781018715459220616676556158555325668874828595243740077999133158835820219607091396725362993900042416441543464725833814774001315084546814237592312443026876092145027754818048378402626925767953650163670226770052348469330899710373238411354392


mas deu
266207620013672960

21986

ooiooi1462268626000000000

--585046044928301363999999999


Teste 6 deu errado! +0.020
O resultado para
#include<iostream>
int main() {
    BigInt a(16059950);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(15);
    std::cout << a << std::endl;
    a = a ^ BigInt(27);
    a = a - BigInt(-1329355798);
    std::cout << a.abs() << std::endl;
    a = a / (2036823687);
    std::cout << a << std::endl;
    a = a + BigInt(1644266870);
    std::cout << a << std::endl;
    a = a ^ BigInt(10);
    return 0;
}
deveria ser
16059950
1219446727628552281508526382164631038453249467061328192136241259964079072309985900848388671875000000000000000




mas deu
16059950

5

1329355798

ooi22072

1644266870


Teste 7 deu errado! +0.033
O resultado para
#include<iostream>
int main() {
    BigInt a(10625128);
    a = a * BigInt(178006198);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(531034190);
    std::cout << a << std::endl;
    a = a * BigInt(628532876);
    a = a + BigInt(-72097348);
    a = a ^ BigInt(22);
    a = a / (-1577563151);
    a = a * BigInt(-808433945);
    std::cout << a << std::endl;
    a = a ^ BigInt(17);
    return 0;
}
deveria ser
1891338638543344
1004365481934567460931360
20629698774878366632239906183155238770994809841442604323893435303460737765430614933928429412252129246374257547995593621082896913316916599765006513354578811781327554237503550598190853954709835648250019851123624352028580256031789199035324204641890117990020105386271662279231022545463329037032060102563324419245660404083499229352215558904470773533387968662012449044198583878972696790749269800856911410093155862966616172893343408255936200492436097468548262053857166747563013125999086552294887387467032045802177720186577587789185637669018783387799423476594490157518422634364547232524469882447127638316379641729338483366878036250933579569130946891334371975612878635279169596371598617785458996357631872557211929010246259235765545

mas deu
1891338638543344

1004365481934567460931360

ooi-21975


Teste 8 deu errado! +0.011
O resultado para
#include<iostream>
int main() {
    BigInt a(20287524);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-1836980993);
    a = a - BigInt(912171155);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(17);
    a = a + BigInt(-1875221606);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(1790012530);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(21);
    a = a - BigInt(1399061072);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-145501355);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    return 0;
}
deveria ser
20287524
2728864624
25804405181625750645703070064283538933582406881634094213573708209983229653315117909047694163142707864060911021988954951518152327632428628723615790904272079920230
46190208604307019426464086074535440163855346105683255517497433774433852169301617095622772919633311254798567412575334884823035188910712479745990172624507053586373100481900






mas deu
20287524

1912171155

1000000000

17900125300

1000000000

-1000000000

1000000000

1145501355

-1145501355


Teste 9 deu errado! +0.017
O resultado para
#include<iostream>
int main() {
    BigInt a(-17196292);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-2120753594);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(-2124861599);
    a = a / (259598031);
    a = a + BigInt(-1130464196);
    a = a ^ BigInt(22);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a - BigInt(-1867055512);
    a = a + BigInt(-791663565);
    a = a - BigInt(512904731);
    a = a * BigInt(-1049375536);
    std::cout << a << std::endl;
    std::cout << a << std::endl;
    a = a ^ BigInt(23);
    return 0;
}
deveria ser
17196292
2137949886
511134103577546343093026887290024241472788289881660919377727943602152895698644662879596616441701787032779649948187331326787020997994219929572345437211977468754103740658268209947264736921370777101070625234804442819194345488384
511134103577546343093026887290024241472788289881660919377727943602152895698644662879596616441701787032779649948187331326787020997994219929572345437211977468754103740658268209947264736921370777101070625234804442819194345488384
-536371623909567211348084987712380775848500641109091303842256047279686965677717337582816002842297225519680994734271453039456721317613439463496862243951473201893760865052875195645171465040762449075172513529628038038574007645365924921600
-536371623909567211348084987712380775848500641109091303842256047279686965677717337582816002842297225519680994734271453039456721317613439463496862243951473201893760865052875195645171465040762449075172513529628038038574007645365924921600

mas deu
17196292

2137949886

ooi22041

22041

-1721585882088452336

-1721585882088452336


Teste 10 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-17802652);
    a = a - BigInt(-688251233);
    a = a ^ BigInt(20);
    a = a - BigInt(372219310);
    a = a ^ BigInt(17);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a * BigInt(2051980611);
    a = a - BigInt(-218067500);
    std::cout << a << std::endl;
    a = a ^ BigInt(10);
    return 0;
}
deveria ser
9210046374070714850544089959542388743583596715722062225086591913932508424025642458457852196928801336078248723532973162695107203156793442291502012138473301651627601275437573249702973543394465446709382113519734093475920602371460415433966049644008025627024172565259526455438620934792896145793411381728113442110773340736895700532177535724161145807942069891201889371921973187740271526060484353597429803966644219316344739352222731899032217073357098977245446852365693654544921453386417449438119988899693276525669954118464229064882370445877193694872689696834120143175375139089054121360133804638521076458912727701014529622371078078366263669251739279722387393126128755758756573596390261906212450057064452221268854698601273586148507380999281028538804693084282642975826862865495426318902727206740728026339670267809737906011293145942358728056327548919081716312375156462834133275132210214538969776673609408875465565859783456056902499584082602368764412341525024330690144066339700030574642192989772355532351044727556727643721352809632403267880263151023237205522835396249118039619606381352312814216503185290280434882192164983153365831981938175807411205164883621436391805282759136416200472270643214161474276747989089685088951109465310771483922775683310684468746542039113135862654971586089673523676677267534054433199434991166160019301849799332244148636406534695062893349800590099602839346798084608032876730145678998211193117896145421031538574725194036914774120490270490115265073552907360413110881654711786570334449593214997697730330079375572946477346621658877190026719543668360943500800066402973432673572203578740868036404833980132854947010801076526415427823610762670930582752431252262784641942107235451282581701813635743620475289845005119640400757080707862427885129854880574183810681604200261950923077211953156701606601203386583625167082591351976957584962670850572672172332363722573493983589470859661304882602230375374684750587154784348196577664366597734536635533530209547852862288740653249015066637771381400777734462770105835905116497659346159678674480714718362111466531907428149250093477202024084472533876925854314252518473267316103004223694919553976889359817954911986956153810233881793485602353634103769539524784262032480256555314241065194780791304898415596692330850305770373428128484599946337095959574135361052208970992742155345729664701429749417495932315938064831806410183689661220977555514594088209628584043251507489331557036700964652958824998370085755468521636442653788674727393873182725094606411896591178196534267318968792726802220936899347808177179801842240738427665441837834948345166528603372403003107625327111048123173274291216972985215179611342570107451653961989610029228167176441212219588390430303252480800873364254527224133486512443353659614428644743589829196541515758726019666775245182124394266016980984034594964910094565144350942970068717648393373044853142187513720215269038950446395442576649370504701485610152358796943157001264307509569189957722610920855043472092881422336159676134111590073792324318531



mas deu
22006

22006

22006


Teste 11 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(1949241);
    a = a - BigInt(526664875);
    a = a + BigInt(-1866851660);
    a = a * BigInt(461539233);
    a = a / (420879216);
    a = a - BigInt(628823901);
    std::cout << a << std::endl;
    a = a / (232442750);
    a = a + BigInt(1314806985);
    a = a ^ BigInt(13);
    a = a - BigInt(-551520380);
    return 0;
}
deveria ser
-3251434124

mas deu
ooi--655683205

ooi
Teste 12 deu errado! +0.033
O resultado para
#include<iostream>
int main() {
    BigInt a(20908358);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a / (1040056144);
    a = a - BigInt(-906866262);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(164283623);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a / (-1558639224);
    a = a - BigInt(171036293);
    a = a * BigInt(-950904988);
    a = a - BigInt(1321451607);
    a = a + BigInt(1922613309);
    a = a - BigInt(377001651);
    a = a + BigInt(-821363835);
    a = a - BigInt(1294638803);
    a = a ^ BigInt(21);
    return 0;
}
deveria ser
20908358
20908358
20908358
906866262
742582639
742582639

mas deu
20908358

20908358

20908358

ooi21990

1000000000

-1000000000

ooi
Teste 13 deu errado! +0.050
O resultado para
#include<iostream>
int main() {
    BigInt a(14853452);
    a = a - BigInt(-2113979491);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a + BigInt(-1624898616);
    a = a - BigInt(-1131817179);
    a = a ^ BigInt(23);
    a = a * BigInt(-415808011);
    a = a - BigInt(-456536032);
    a = a + BigInt(61573635);
    a = a - BigInt(66125541);
    return 0;
}
deveria ser
2128832943
2128832943

mas deu
2128832943

2128832943


Teste 14 deu errado! +0.033
O resultado para
#include<iostream>
int main() {
    BigInt a(-628425);
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(20);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(-17368775);
    a = a ^ BigInt(14);
    a = a * BigInt(402644108);
    a = a + BigInt(-732302756);
    std::cout << a << std::endl;
    a = a ^ BigInt(26);
    return 0;
}
deveria ser
628425
92271817744310886908247782516627461579677652926047910528504439984411732567953455546856284854584373533725738525390625


mas deu
628425

5

--652611358


Teste 15 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(7971771);
    a = a + BigInt(469731864);
    a = a - BigInt(-729179491);
    a = a * BigInt(-1814471305);
    std::cout << a.abs() << std::endl;
    a = a / (834152312);
    std::cout << a << std::endl;
    a = a - BigInt(-1627920523);
    a = a + BigInt(-1648036232);
    a = a * BigInt(-1247009067);
    a = a - BigInt(-159033991);
    a = a * BigInt(1770578815);
    a = a - BigInt(839358704);
    std::cout << a.abs() << std::endl;
    a = a / (-222397281);
    a = a ^ BigInt(29);
    std::cout << a.abs() << std::endl;
    a = a * BigInt(1561611229);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    return 0;
}
deveria ser
2189854800615699430
-2625245736
5840767171356857738134991186


-226175279603327767182360155129093408540452637577534199854215974551351447268734421583508107929569105991593456490210372421643210194456628569318042262144959072205508951371214995240958148232033143843411148185431599207077879627033929038244882007844727104916977656078798057511106201824938681260764377738531423367887713064066386521182594886195425693434136405507426046188220757333226532357980945776003172548909063997398449623208171622617694659251411175289026922392655558937969632707065801830573287640478883004358464622430782746438806241393927751400657574434826853896430488260704557

mas deu
21884

ooi21884

1770578813229421188245043285776304855000000033

ooi5

21884

21884


Teste 16 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-8460114);
    a = a - BigInt(-354713860);
    a = a / (296139077);
    a = a * BigInt(-800185109);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    a = a / (1082120987);
    a = a ^ BigInt(11);
    std::cout << a << std::endl;
    a = a * BigInt(1046628536);
    a = a ^ BigInt(23);
    a = a + BigInt(-732266550);
    a = a - BigInt(1245218567);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(1669657367);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(-1679496800);
    a = a + BigInt(-1756620064);
    return 0;
}
deveria ser
800185109
-800185109
0
1977485117
3647142484

mas deu
ooi21982

-21982

ooi5

21982

1669657367


Teste 17 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-6862734);
    a = a - BigInt(1901568467);
    a = a * BigInt(-1945964945);
    a = a / (1944680155);
    a = a + BigInt(1079469096);
    std::cout << a.abs() << std::endl;
    a = a / (-933429900);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(1246700650);
    a = a * BigInt(392253951);
    a = a - BigInt(-656042381);
    a = a * BigInt(-649316684);
    std::cout << a.abs() << std::endl;
    std::cout << a << std::endl;
    return 0;
}
deveria ser
2989161138
3
317530959113035111848085448
317530959113035111848085448

mas deu
ooi1079469096

ooi5

649316683350683318597266736

649316683350683318597266736


Teste 18: correto! +0.100
Teste 19 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(104537);
    a = a / (-371212811);
    a = a ^ BigInt(21);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(563528647);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(1950690116);
    a = a + BigInt(-2076497212);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a * BigInt(1293462089);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(14);
    std::cout << a << std::endl;
    a = a - BigInt(-1221190710);
    return 0;
}
deveria ser
0
563528647
-3463658681
3463658681
-4480111193109244609
4480111193109244609
1312330136350029816267460102368988322912248994774546591162056384992933543695937831067121378999854804027271880264960071514129518552338921761919658619815483886373019682575069001878571907416572274036996156695401720796437871384204264940491019503850406395428434642561

mas deu
ooi5

5

--1-218470084

-1-218470084

-16870699213474906140

16870699213474906140

22024


Teste 20 deu errado!
O resultado para
#include<iostream>
int main() {
    BigInt a(-1781850);
    a = a * BigInt(-705545946);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(-1942193232);
    std::cout << a << std::endl;
    std::cout << a.abs() << std::endl;
    a = a ^ BigInt(28);
    std::cout << a.abs() << std::endl;
    a = a + BigInt(304990583);
    a = a * BigInt(1913764042);
    std::cout << a << std::endl;
    a = a * BigInt(678133646);
    a = a / (-255026226);
    a = a - BigInt(-163438552);
    std::cout << a.abs() << std::endl;
    a = a - BigInt(1889190561);
    return 0;
}
deveria ser
1257177043880100
1257178986073332
1257178986073332
606902836304196616814925808534152861202343964851071166615208399288674819828054383497996245804782940864191764079817870292123365229678944186201034541969571896244575758454847196307331578722842221620610563206656701972155425782840840298935531074675967000088170002843312214934180996583001191898536855389478856288779148478288960401034452994575566972247035168356463631576973800122177299442015267858948765467832484171734495029886976
1161468825106783658958457581270438474700462766047691883851176684895044248017759101958943394272186943840902603488502658074085732204592634588076492489621306553166623924075764044897486356330867727776919461950267811272621539098400500773167350246888482446347350581024568677120410987980272549498561546256138540284751102437128430101061635744157941123249187846310016336392748213849918122420795483643454475272629115887399629942905420886933478
3088431732840682597023254393151172440074079178927920562493862755582123868466811144988296326297882981730782960473055922493520708323072707188781517626655831750349375938866479763544162391572647569905605980228454549355809171904264796505806403577808843694171783853910025601026072841220355117771985588329542539693216270620768971716222924923453746336513277347236825064876178006171148347537748480595360993781262427349251666815762018364102035

mas deu
125717743880100

125716000000000

125716000000000

5

22001

ooi22001


Nota exercicio 6: 0.4
Procurando exercício 7...
Procurando exercício 8...
Exercício 8...
Compilando...
g++ -O2 -Wno-unused-result  "ex8.cpp"  > comp.log 2>&1
Teste 1: correto! +0.100
Teste 2: correto! +0.100
Teste 3: correto! +0.100
Teste 4: correto! +0.100
Teste 5: correto! +0.100
Teste 6: correto! +0.100
Teste 7: correto! +0.100
Teste 8: correto! +0.100
Teste 9: correto! +0.100
Teste 10: correto! +0.100
Teste 11: correto! +0.100
Teste 12: correto! +0.100
Teste 13: correto! +0.100
Teste 14: correto! +0.100
Teste 15: correto! +0.100
Teste 16: correto! +0.100
Teste 17: correto! +0.100
Teste 18: correto! +0.100
Teste 19: correto! +0.100
Teste 20: correto! +0.100
Nota exercicio 8: 2.0
Nota total: 7.40
{"scores": {"ex1": 1.0, "ex2": 1.0, "ex3": 1.0, "ex4": 1.0, "ex5": 1.0, "ex6": 0.4, "ex7": 0.0, "ex8": 2.0}}
