Versão do G++:
g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Varificando data de envio...
AGORA: 2024-12-13 23:39:32.012524-03:00
PRAZO MÁXIMO: 2024-12-17 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 1.0
Procurando exercício 3...
Exercício 3...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3 deu errado!
None
O resultado para
add -605
pop -605
add -707
add 71
pop 71
pop -707
add 695
pop 695
add 29
add 695
pop 695
pop 29
add 630
pop 630
add -982
add -516
pop -516
pop -982
add -889
pop -889
add 205
add -919
add 87
pop 87
pop -919
pop 205
add -889
add -825
pop -825
pop -889
add 845
pop 845
add -578
pop -578
add -92
pop -92
add -271
pop -271
add 501
add -188
pop -188
pop 501
add -890
add 941
pop 941
pop -890
add 751
add -84
pop -84
pop 751
add 679
pop 679
add -26
pop -26
add 877
add -829
pop -829
add -841
pop -841
pop 877
add 959
pop 959
add 29
add -480
pop -480
pop 29
add 411
add -106
add -207
pop -207
add -292
pop -292

deveria ser
stack
mas deu
none

Teste 4: correto! +0.050
Teste 5 deu errado!
None
O resultado para
add 535
pop 535
add -24
pop -24
add 893
add -188
add -625
pop 893
pop -188
add 860
pop 860
add -335
pop -335
pop -625
add 392
add -981
add 832
pop 832
add 420
add 114
pop 420
pop 392
pop 114
add -193
add 405
add -924
pop 405
add -242
pop -193
pop -242
pop -924
add -800
pop -800
pop -981

deveria ser
priority
mas deu
none

Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8 deu errado!
None
O resultado para
add 984
pop 984
add 984
pop 984
add 316
pop 316
add -321
pop -321
add 551
add -646
add 941
add -582
add -578
pop -578
add -199
pop -199
add 214
pop 214
pop -582
add -959
add -557
pop -557
pop -959
pop 941
pop -646
pop 551
add 950
pop 950
add 215
pop 215
add 749
add 634
add 398
pop 398
pop 634
pop 749
add -556
add 551
add -153
pop -153
add 314
pop 314
pop 551
pop -556
add -972
pop -972
add -171
add 348
pop 348
pop -171
add -581
add -823
add -403
add -249
pop -249
add 27
pop 27
pop -403
add -898
pop -898
pop -823
pop -581
add -18
pop -18
add 722
add -65
add 845
add 96
add -735
pop -735
add -851
add -600
pop -600
pop -851
pop 96
pop 845
add 375
add 159

deveria ser
stack
mas deu
none

Teste 9 deu errado!
None
O resultado para
add -994
pop -994
add 994
pop 994
add 727
pop 727
add 246
pop 246
add 395
add 888
add 541
pop 888
add -582
add -945
pop 541

deveria ser
priority
mas deu
none

Teste 10 deu errado!
None
O resultado para
add 477
pop 477
add -91
pop -91
add 963
add -32
pop 963
add -816
add 395
pop 395
pop -32
add -70
pop -70
add -168
pop -168
pop -816
add 979
add -168
pop 979
pop -168
add 491
pop 491
add -349
pop -349
add 804
add 131
add -246
add -302
add -148
add 999
pop 999
pop 804
add 804
pop 804
add -552
pop 131
add 615
pop 615
add -220
pop -148
add -619
add 979
add 312
add 251
add 730
add -963
add 86
pop 979
pop 730
add 615
pop 615
add -621
add -713
add -5
add -953
pop 312
add -832
pop 251
pop 86
pop -5
add -310
add 766
add 98
pop 766
pop 98
add 708
add 491
pop 708
pop 491
pop -220
add 708
add -876
add -774
add -655
pop 708
pop -246
add 993
pop 993
pop -302
add -318
pop -310
add 466
add -902
pop 466
pop -318
add -129
pop -129
pop -552
pop -619
add -308
pop -308
pop -621

deveria ser
priority
mas deu
none

Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14 deu errado!
None
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19 deu errado!
None
Teste 20 deu errado!
None
Nota exercicio 3: 0.6
Procurando exercício 4...
Exercício 4...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 4: 1.0
Procurando exercício 5...
Exercício 5...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Exercício 6...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex6.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 6: 1.0
Procurando exercício 7...
Exercício 7...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex7.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 7: 1.0
Procurando exercício 8...
Exercício 8...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex8.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 8: 1.0
Procurando exercício 9...
Exercício 9...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex9.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 9: 1.0
Procurando exercício 10...
Exercício 10...
Criando testes aleatórios...
Testes Criados!
Compilando...
g++ -O2 -Wno-unused-result  "ex10.cpp" 
Teste 1: correto! +0.050
Teste 2 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
87
87.9
87.9.60
87.9.60
53.98
24.56.55
53.98.83
24.56.55
87.9.60
65.13.9
63.5.80.4
71.9
87.9.60
71.9.7
87.9.60.2
53.98.83.67
50
50
98.15.50.7
71.9.7
69
65.13.9.74
84.77.68.44
53.98.83.1
95.5.28.27
87.9.60.59
87.9.60.2
53.98.83.1.70
87.9.60
91.8
63.1
87.9.60.59.22
71.9.7
87.9.60.59.22
71.9
1
98.15.50.7.1
98.15.50.7.9
65.13.9.13
6.7
6.7
90.53.45
87
71.9.42
2
24.56.55
52.23.9
87.9.60
4.8.5.98
4.28.39
10.5.87.8
5
89.97.15.31
52.23.9
87.33
50
98.15.50.7
94.21.49.62
7.4.4
52.21.7
98.15.50.7.8
50
24.56.55.2
31.7
95.1
95.1
87.9.60.3
62.7.97
91.8.41
6.9.19.59
10.5.87.8.8
1
1.4.36
5
4.1
90
94.21.49.62
98.15.50.7.9
94.21.49.62.3
1.79.58
87.9.60.7
7.40
65.13.9.74.8
62.7.97.72
65.13.9.74.8
44.6.4
2.9.45
2.8.91
7.9.9
53.9.2.35
28.66
36.52
23.9.60
45
4.1
52.21.7.8
97.8.3
10.4.3
9
95.5.28.27
7.9.9.35
7.6.6
24.56.55.5
71.7.93.8
3.2
23.9.5
21
10.5.87.8.8.98
1.79.58.93
5.7.21
6.7.51
9.1.66
80.75
87.9.11
42.80.87.14
27.53.8
89.53.38
24.56.55
27.53.8
89.1.40
79
5.7
66
10.4.3.1
24.56.55.41
87.9.60.7.6
2
12.35.7.40
94.4
28.66.67
7
41
7.3.41
87.9.60.3.7
57.25
25.34.47
41
71
4.84.4
94.21.49.62.36
28.66.67.4
3.2.7.7
25.34.47.42
5.39.12.69
4.28.39
7.46
10
1
3.2
65.13.9.74.83
4.1.72
47
15
25.2
5.5
24.8.64
71.9.42
5.7.21
14.30
52.21.7.8.70
41
41.86.85.35
39.1.3.28
51.84
25.34.47.42.99
1.81.34.5
8
deveria ser
1
1
1
1.4.36
1.79.58
1.79.58.93
1.81.34.5
2
2
2.8.91
2.9.45
3.2
3.2
3.2.7.7
4.1
4.1
4.1.72
4.8.5.98
4.28.39
4.28.39
4.84.4
5
5
5.5
5.7
5.7.21
5.7.21
5.39.12.69
6.7
6.7
6.7.51
6.9.19.59
7
7.3.41
7.4.4
7.6.6
7.9.9
7.9.9.35
7.40
7.46
8
9
9.1.66
10
10.4.3
10.4.3.1
10.5.87.8
10.5.87.8.8
10.5.87.8.8.98
12.35.7.40
14.30
15
21
23.9.5
23.9.60
24.8.64
24.56.55
24.56.55
24.56.55
24.56.55
24.56.55.2
24.56.55.5
24.56.55.41
25.2
25.34.47
25.34.47.42
25.34.47.42.99
27.53.8
27.53.8
28.66
28.66.67
28.66.67.4
31.7
36.52
39.1.3.28
41
41
41
41.86.85.35
42.80.87.14
44.6.4
45
47
50
50
50
50
51.84
52.21.7
52.21.7.8
52.21.7.8.70
52.23.9
52.23.9
53.9.2.35
53.98
53.98.83
53.98.83.1
53.98.83.1.70
53.98.83.67
57.25
62.7.97
62.7.97.72
63.1
63.5.80.4
65.13.9
65.13.9.13
65.13.9.74
65.13.9.74.8
65.13.9.74.8
65.13.9.74.83
66
69
71
71.7.93.8
71.9
71.9
71.9.7
71.9.7
71.9.7
71.9.42
71.9.42
79
80.75
84.77.68.44
87
87
87.9
87.9.11
87.9.60
87.9.60
87.9.60
87.9.60
87.9.60
87.9.60
87.9.60.2
87.9.60.2
87.9.60.3
87.9.60.3.7
87.9.60.7
87.9.60.7.6
87.9.60.59
87.9.60.59.22
87.9.60.59.22
87.33
89.1.40
89.53.38
89.97.15.31
90
90.53.45
91.8
91.8.41
94.4
94.21.49.62
94.21.49.62
94.21.49.62.3
94.21.49.62.36
95.1
95.1
95.5.28.27
95.5.28.27
97.8.3
98.15.50.7
98.15.50.7
98.15.50.7.1
98.15.50.7.8
98.15.50.7.9
98.15.50.7.9
mas deu
1
50
5
2
90
79
50
66
10
1
87
21
50
47
15
2
1
45
50
7
41
87
41
69
5
9
41
71
8
1.4.36
1.79.58
1.79.58.93
1.81.34.5
2.8.91
2.9.45
3.2
3.2
3.2.7.7
4.1
4.1
4.1.72
4.8.5.98
4.28.39
4.28.39
4.84.4
5.7
5.5
5.7.21
5.7.21
5.39.12.69
6.7
6.7
6.7.51
6.9.19.59
7.40
7.46
7.3.41
7.4.4
7.6.6
7.9.9
7.9.9.35
9.1.66
10.4.3
10.4.3.1
10.5.87.8
10.5.87.8.8
10.5.87.8.8.98
12.35.7.40
14.30
23.9.60
23.9.5
24.8.64
24.56.55
24.56.55
24.56.55
24.56.55
24.56.55.2
24.56.55.5
24.56.55.41
25.2
25.34.47
25.34.47.42
25.34.47.42.99
27.53.8
27.53.8
28.66
28.66.67
28.66.67.4
31.7
36.52
39.1.3.28
41.86.85.35
42.80.87.14
44.6.4
51.84
52.21.7
52.21.7.8
52.21.7.8.70
52.23.9
52.23.9
53.98
53.9.2.35
53.98.83
53.98.83.1
53.98.83.67
53.98.83.1.70
57.25
62.7.97
62.7.97.72
63.1
63.5.80.4
65.13.9
65.13.9.13
65.13.9.74
65.13.9.74.8
65.13.9.74.83
65.13.9.74.8
71.9
71.9
71.7.93.8
71.9.7
71.9.7
71.9.7
71.9.42
71.9.42
80.75
84.77.68.44
87.33
87.9
87.9.60
87.9.60
87.9.60
87.9.60
87.9.11
87.9.60
87.9.60
87.9.60.7
87.9.60.2
87.9.60.59
87.9.60.2
87.9.60.3
87.9.60.3.7
87.9.60.7.6
87.9.60.59.22
87.9.60.59.22
89.1.40
89.53.38
89.97.15.31
90.53.45
91.8
91.8.41
94.4
94.21.49.62
94.21.49.62
94.21.49.62.3
94.21.49.62.36
95.1
95.1
95.5.28.27
95.5.28.27
97.8.3
98.15.50.7
98.15.50.7
98.15.50.7.9
98.15.50.7.1
98.15.50.7.9
98.15.50.7.8

Teste 3 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
5.51.2.17
5.51.2.17.65
8
91.4.7
28.98
28.98
86.11
28.98
86.11.80
55.58.44.7
95.49.61
95.49.61.3
5
95.49.61.3.53
92.86.34
1.2.3.29
2.30
8
5.51.2.17
8.2.43.57
28.98
73.9
8.2.43.57.79
39
8.2.43.57.79
8.2.43.57.79.88
8.6
5
73.81.13
5.59
5.51.2.17.3
95.49.61.31
95.49.61.76
4.16.6.9
49.5
49.5
95.49.61.31
deveria ser
1.2.3.29
2.30
4.16.6.9
5
5
5.51.2.17
5.51.2.17
5.51.2.17.3
5.51.2.17.65
5.59
8
8
8.2.43.57
8.2.43.57.79
8.2.43.57.79
8.2.43.57.79.88
8.6
28.98
28.98
28.98
28.98
39
49.5
49.5
55.58.44.7
73.9
73.81.13
86.11
86.11.80
91.4.7
92.86.34
95.49.61
95.49.61.3
95.49.61.3.53
95.49.61.31
95.49.61.31
95.49.61.76
mas deu
5
39
8
8
5
1.2.3.29
2.30
4.16.6.9
5.59
5.51.2.17
5.51.2.17
5.51.2.17.65
5.51.2.17.3
8.6
8.2.43.57
8.2.43.57.79
8.2.43.57.79
8.2.43.57.79.88
28.98
28.98
28.98
28.98
49.5
49.5
55.58.44.7
73.9
73.81.13
86.11
86.11.80
91.4.7
92.86.34
95.49.61
95.49.61.3
95.49.61.31
95.49.61.76
95.49.61.31
95.49.61.3.53

Teste 4 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
7.6
64.22.7
7.6.5
68.46.8.34
7.6
7.6.5.3
8
7.6
32.66.4
2.59.43.6
75.20.2
6.55.5
1.47.5.89
5.93.3
77.74.6
2.59.43.6.6
1.7.18
7.6.5.3.36
1.7.18
1.51
75.20.2
68.46.8.34
7.6.5.3
26.66
22.86.25.51
8.7
93.8.77
64.9.6.8
3.3
1
8.7
7.6
5.9.9.2
2.23.86.5
7.6
22.86.25.51.7
5.93.3
67.8
7.17.22
6.55.5.1
9.31
9.82.8.4
64.22.7
93.8.77
36
63.9
7.6
2.59.43.6.98
36
2.99.3
61
9.31
7.6.30
52.99.51.4
5.5.4.7
1.51.6
39.6.1.1
87.31
69.5
75.20.2.44
2.88.3
39.6.1.1.57
61.31
9.26.1
9.54.25.6
75.20.2.44.9
46.69.47
7.2
9.82.8.4.8
77.74.6
2.6.15.6
7.6
deveria ser
1
1.7.18
1.7.18
1.47.5.89
1.51
1.51.6
2.6.15.6
2.23.86.5
2.59.43.6
2.59.43.6.6
2.59.43.6.98
2.88.3
2.99.3
3.3
5.5.4.7
5.9.9.2
5.93.3
5.93.3
6.55.5
6.55.5.1
7.2
7.6
7.6
7.6
7.6
7.6
7.6
7.6
7.6.5
7.6.5.3
7.6.5.3
7.6.5.3.36
7.6.30
7.17.22
8
8.7
8.7
9.26.1
9.31
9.31
9.54.25.6
9.82.8.4
9.82.8.4.8
22.86.25.51
22.86.25.51.7
26.66
32.66.4
36
36
39.6.1.1
39.6.1.1.57
46.69.47
52.99.51.4
61
61.31
63.9
64.9.6.8
64.22.7
64.22.7
67.8
68.46.8.34
68.46.8.34
69.5
75.20.2
75.20.2
75.20.2.44
75.20.2.44.9
77.74.6
77.74.6
87.31
93.8.77
93.8.77
mas deu
36
36
8
61
1
1.51
1.7.18
1.7.18
1.47.5.89
1.51.6
2.6.15.6
2.23.86.5
2.59.43.6
2.59.43.6.98
2.59.43.6.6
2.88.3
2.99.3
3.3
5.5.4.7
5.9.9.2
5.93.3
5.93.3
6.55.5
6.55.5.1
7.6
7.6
7.6
7.6
7.2
7.6
7.6
7.6
7.6.30
7.6.5
7.6.5.3
7.6.5.3
7.6.5.3.36
7.17.22
8.7
8.7
9.31
9.31
9.26.1
9.54.25.6
9.82.8.4
9.82.8.4.8
22.86.25.51
22.86.25.51.7
26.66
32.66.4
39.6.1.1
39.6.1.1.57
46.69.47
52.99.51.4
61.31
63.9
64.9.6.8
64.22.7
64.22.7
67.8
68.46.8.34
68.46.8.34
69.5
75.20.2
75.20.2
75.20.2.44
75.20.2.44.9
77.74.6
77.74.6
87.31
93.8.77
93.8.77

Teste 5 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
77.97.45
7
1.9
1.9
1.9.9
84.73
1.9.9
1.9.9
91.3
1.9
1.9.9
45.6.9.3
11.47
8.39.7
11.47.1
45.6.9.3
61.1.8
1.9.9.89
11.47.1
11.47.1
11.47.1.1
1.9
86.5
61.1.8.20
11.47.1
33.79
39.50.86
11.47
17.70
5.85
5.43.45.5
3.4.8.42
4.9.27
2.6
11.47.1
7.24
31.58.8
1.6
11.47.1.8
52.7.12
2.6.4
2.6.7
31
1.9
11.47.1.1.4
5.85
46.76
6.1.8
1.9.9
34
70.85.6.96
5.85.3
84.73
1.47.33.9
1.70
5
1.9.46
6.5
3.7
8.39.7
61.1.8
6.2.97.81
1.9.9.4
18.98.3
5
4.5.45.16
5
1.9
1.6.2
1.6
5.85
1.9.57
74
1.64.9.6
74
4.9.27.9
1.9.9
11.47.1.16
91.3.3
4.9.27.9
1.6.57
49.61.6
deveria ser
1.6
1.6
1.6.2
1.6.57
1.9
1.9
1.9
1.9
1.9
1.9
1.9.9
1.9.9
1.9.9
1.9.9
1.9.9
1.9.9
1.9.9.4
1.9.9.89
1.9.46
1.9.57
1.47.33.9
1.64.9.6
1.70
2.6
2.6.4
2.6.7
3.4.8.42
3.7
4.5.45.16
4.9.27
4.9.27.9
4.9.27.9
5
5
5
5.43.45.5
5.85
5.85
5.85
5.85.3
6.1.8
6.2.97.81
6.5
7
7.24
8.39.7
8.39.7
11.47
11.47
11.47.1
11.47.1
11.47.1
11.47.1
11.47.1
11.47.1.1
11.47.1.1.4
11.47.1.8
11.47.1.16
17.70
18.98.3
31
31.58.8
33.79
34
39.50.86
45.6.9.3
45.6.9.3
46.76
49.61.6
52.7.12
61.1.8
61.1.8
61.1.8.20
70.85.6.96
74
74
77.97.45
84.73
84.73
86.5
91.3
91.3.3
mas deu
74
7
31
5
5
34
74
5
1.6
1.9
1.9
1.70
1.9
1.9
1.9
1.9
1.6
1.6.2
1.6.57
1.9.9
1.9.46
1.9.9
1.9.9
1.9.9
1.9.57
1.9.9
1.9.9
1.9.9.89
1.9.9.4
1.47.33.9
1.64.9.6
2.6
2.6.4
2.6.7
3.7
3.4.8.42
4.5.45.16
4.9.27
4.9.27.9
4.9.27.9
5.85
5.85
5.85
5.43.45.5
5.85.3
6.5
6.1.8
6.2.97.81
7.24
8.39.7
8.39.7
11.47
11.47
11.47.1
11.47.1
11.47.1
11.47.1
11.47.1
11.47.1.8
11.47.1.1
11.47.1.16
11.47.1.1.4
17.70
18.98.3
31.58.8
33.79
39.50.86
45.6.9.3
45.6.9.3
46.76
49.61.6
52.7.12
61.1.8
61.1.8
61.1.8.20
70.85.6.96
77.97.45
84.73
84.73
86.5
91.3
91.3.3

Teste 6 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
6.5.9.21
8.33.7
9.3
6.5.9.21
8.33.7.38
66.49.6
6.6.5
2
83
99
2.86
43.6
9.24.56.1
8.33.7.38.8
9.24.56.1.54
71
9.24.56.1
9.24.56.1.19
8.33.7.38.8
6.5.9.21
4.49
6.6.5
83
3.71.14
71
2.56
9.24.56.1
9.8.4.4
4.49
4.49
3.71.14.15
8.33.7.38
4.49
8.33.7.38
3.71.14.15.41
9.24.56.1
7.1.6.1
deveria ser
2
2.56
2.86
3.71.14
3.71.14.15
3.71.14.15.41
4.49
4.49
4.49
4.49
6.5.9.21
6.5.9.21
6.5.9.21
6.6.5
6.6.5
7.1.6.1
8.33.7
8.33.7.38
8.33.7.38
8.33.7.38
8.33.7.38.8
8.33.7.38.8
9.3
9.8.4.4
9.24.56.1
9.24.56.1
9.24.56.1
9.24.56.1
9.24.56.1.19
9.24.56.1.54
43.6
66.49.6
71
71
83
83
99
mas deu
71
99
2
83
83
71
2.56
2.86
3.71.14
3.71.14.15
3.71.14.15.41
4.49
4.49
4.49
4.49
6.5.9.21
6.5.9.21
6.5.9.21
6.6.5
6.6.5
7.1.6.1
8.33.7
8.33.7.38
8.33.7.38
8.33.7.38
8.33.7.38.8
8.33.7.38.8
9.3
9.8.4.4
9.24.56.1
9.24.56.1
9.24.56.1
9.24.56.1
9.24.56.1.19
9.24.56.1.54
43.6
66.49.6

Teste 7 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
1.1
1.1.92
1.1.92.7
1.1.92
1
53
1.1.92
60.8.73.3
1.1
1.1.92.95
1.1.92
1.1.92.7
5.8.9.50
1.36
53.38
10
9
60.8.73.3.21
9.3
60.8.73.3
7.4.1.88
2.10.71
7.4.1.88.57
9
7.4.1.88.30
1.69
93.73
85
38
60.8.73.3.21.58
1.1.92.7
53.38
53.38
8
7.8
57.15
60.8.73.3
7.4.1.88.57
4
78.4
91
1.36.21
7.44.24.7
4.79
3.2.81.99
73.21
98
8.6
2.10.71
36.11.79.5
7
7.44.24.7.1
53.38.70
9
7
85
7.4.1.88.57.53
12.3.90.32
1.1
1.69
2
3.2.81.99
47.93.53.6
5
8.42.6
50.3.4
49
2.10.71
25.56.9.71
78.4
11.14.97.82
57.15
91
7.4.19.7
1.67
31.1
97
1.1.4
1.69
7.4.1.88.30
1.67
36.9.4
3.2.81.99
9
1.1.92.62
8.6.55
60.8.73.3
23.4.5.6
2.61
3.2.81.99.35
3.2.81.99
94.84.71.9
94.84.71.9.26
1.1.92
66.80
1.67.37
84.61.8.8
9.2
3.2.81.99.7
3.2.81.99.8
3.2.81.99.71
11.19
1.69
9.2
7.55.58
6.8
1.67
8.9
2.10.71.7
39.38.9
42
3.2.81.99
2.10.71
75.5
58.84
78.4
6.1.4.74
9
3.51.7
81
1.69
1.1.92.95.89
60.8.73.3.21.45
60.8.4.1
9.1
3.51.7
1.89.1
72.4.6
9.1.10
3.2.81.99.7
60.3.5.58
1.1
3.2.81.99.8
3.87
6.98.40
6.98.40
2.8.6.2
6.98.40.43
66
1.67.37
5.12.93
3.2.81.99.8.14
2.90
5
9
36.5
75.9.18
7.44.24.7.1
3.2.81.99.8.14
76
8.75.46
7.59
8.7
5.2
93.91.3
10
3.51.7
42.37
78.1.54
88.41
1.3.38
3.87
5.12.93
36.5
66.80
5.12.93
1.1.4
4.29.6.8
3
25.56.9.71.5
1.7.16
1.7.16.85
42.37.85
6
1.1.7
7.55.58.31
36.5.9
8.7
7.4.1.88.30
deveria ser
1
1.1
1.1
1.1
1.1
1.1.4
1.1.4
1.1.7
1.1.92
1.1.92
1.1.92
1.1.92
1.1.92
1.1.92.7
1.1.92.7
1.1.92.7
1.1.92.62
1.1.92.95
1.1.92.95.89
1.3.38
1.7.16
1.7.16.85
1.36
1.36.21
1.67
1.67
1.67
1.67.37
1.67.37
1.69
1.69
1.69
1.69
1.69
1.89.1
2
2.8.6.2
2.10.71
2.10.71
2.10.71
2.10.71
2.10.71.7
2.61
2.90
3
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99.7
3.2.81.99.7
3.2.81.99.8
3.2.81.99.8
3.2.81.99.8.14
3.2.81.99.8.14
3.2.81.99.35
3.2.81.99.71
3.51.7
3.51.7
3.51.7
3.87
3.87
4
4.29.6.8
4.79
5
5
5.2
5.8.9.50
5.12.93
5.12.93
5.12.93
6
6.1.4.74
6.8
6.98.40
6.98.40
6.98.40.43
7
7
7.4.1.88
7.4.1.88.30
7.4.1.88.30
7.4.1.88.30
7.4.1.88.57
7.4.1.88.57
7.4.1.88.57.53
7.4.19.7
7.8
7.44.24.7
7.44.24.7.1
7.44.24.7.1
7.55.58
7.55.58.31
7.59
8
8.6
8.6.55
8.7
8.7
8.9
8.42.6
8.75.46
9
9
9
9
9
9
9.1
9.1.10
9.2
9.2
9.3
10
10
11.14.97.82
11.19
12.3.90.32
23.4.5.6
25.56.9.71
25.56.9.71.5
31.1
36.5
36.5
36.5.9
36.9.4
36.11.79.5
38
39.38.9
42
42.37
42.37.85
47.93.53.6
49
50.3.4
53
53.38
53.38
53.38
53.38.70
57.15
57.15
58.84
60.3.5.58
60.8.4.1
60.8.73.3
60.8.73.3
60.8.73.3
60.8.73.3
60.8.73.3.21
60.8.73.3.21.45
60.8.73.3.21.58
66
66.80
66.80
72.4.6
73.21
75.5
75.9.18
76
78.1.54
78.4
78.4
78.4
81
84.61.8.8
85
85
88.41
91
91
93.73
93.91.3
94.84.71.9
94.84.71.9.26
97
98
mas deu
97
76
9
8
53
2
85
10
98
9
5
38
1
49
4
42
7
9
91
66
3
9
91
7
9
6
5
9
85
81
10
1.67
1.69
1.36
1.69
1.1
1.67
1.1
1.1
1.69
1.67
1.69
1.69
1.1
1.1.92
1.1.4
1.1.92
1.1.92
1.1.4
1.1.92
1.1.92
1.1.7
1.1.92.62
1.1.92.7
1.1.92.95
1.1.92.7
1.1.92.7
1.1.92.95.89
1.3.38
1.7.16
1.7.16.85
1.36.21
1.67.37
1.67.37
1.89.1
2.61
2.90
2.8.6.2
2.10.71
2.10.71
2.10.71
2.10.71
2.10.71.7
3.87
3.87
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99
3.2.81.99.71
3.2.81.99.35
3.2.81.99.7
3.2.81.99.7
3.2.81.99.8
3.2.81.99.8
3.2.81.99.8.14
3.2.81.99.8.14
3.51.7
3.51.7
3.51.7
4.79
4.29.6.8
5.2
5.8.9.50
5.12.93
5.12.93
5.12.93
6.8
6.1.4.74
6.98.40
6.98.40
6.98.40.43
7.8
7.59
7.4.1.88
7.4.1.88.57
7.4.1.88.30
7.4.1.88.57
7.4.1.88.30
7.4.1.88.30
7.4.1.88.57.53
7.4.19.7
7.44.24.7
7.44.24.7.1
7.44.24.7.1
7.55.58
7.55.58.31
8.7
8.7
8.9
8.6
8.6.55
8.42.6
8.75.46
9.1
9.2
9.3
9.2
9.1.10
11.19
11.14.97.82
12.3.90.32
23.4.5.6
25.56.9.71
25.56.9.71.5
31.1
36.5
36.5
36.5.9
36.9.4
36.11.79.5
39.38.9
42.37
42.37.85
47.93.53.6
50.3.4
53.38
53.38
53.38
53.38.70
57.15
57.15
58.84
60.3.5.58
60.8.4.1
60.8.73.3
60.8.73.3
60.8.73.3
60.8.73.3
60.8.73.3.21
60.8.73.3.21.45
60.8.73.3.21.58
66.80
66.80
72.4.6
73.21
75.5
75.9.18
78.4
78.4
78.4
78.1.54
84.61.8.8
88.41
93.73
93.91.3
94.84.71.9
94.84.71.9.26

Teste 8 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
11.42.3.94
11.42.3.94
11.42.3.94
65.6.1
2.4
2.4.9
65.6.1
9.3
66.6.92.67
11.42.3.94
66.6.92.67.89
4
25
11.42.3.94.6
6.20
11.42.3.94.8
4.70.2
5
13.64.7.17
11.42.3.94.6.24
50.13.88.37
88
88.11
88.11
8.64
66.6.92.67.64
1.19.51
38.1.4
2.4.9.1
6.37
6.37.5
2.4.9.1
11.42.3.94
8
9.4.45
62.9.40.41
49
4.70.2.34
2.31.3
5.22
11.42.3.94.8
81.55.3
11.42.3.94
8.64
6.37
7.96
38.1.4.76
5
6.37
29.1.85.41
92.7.53
1.19.75.8
11.42.3.94
deveria ser
1.19.51
1.19.75.8
2.4
2.4.9
2.4.9.1
2.4.9.1
2.31.3
4
4.70.2
4.70.2.34
5
5
5.22
6.20
6.37
6.37
6.37
6.37.5
7.96
8
8.64
8.64
9.3
9.4.45
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94.6
11.42.3.94.6.24
11.42.3.94.8
11.42.3.94.8
13.64.7.17
25
29.1.85.41
38.1.4
38.1.4.76
49
50.13.88.37
62.9.40.41
65.6.1
65.6.1
66.6.92.67
66.6.92.67.64
66.6.92.67.89
81.55.3
88
88.11
88.11
92.7.53
mas deu
88
5
4
49
25
5
8
1.19.51
1.19.75.8
2.4
2.4.9
2.4.9.1
2.4.9.1
2.31.3
4.70.2
4.70.2.34
5.22
6.37
6.20
6.37
6.37
6.37.5
7.96
8.64
8.64
9.3
9.4.45
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94
11.42.3.94.8
11.42.3.94.6
11.42.3.94.8
11.42.3.94.6.24
13.64.7.17
29.1.85.41
38.1.4
38.1.4.76
50.13.88.37
62.9.40.41
65.6.1
65.6.1
66.6.92.67
66.6.92.67.64
66.6.92.67.89
81.55.3
88.11
88.11
92.7.53

Teste 9 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
9.9.67
9.9.67
9.9.67
9.9.67.1
9.9.67
9.9.67
9.9.67.6
4.31.5
83.1
9.9.67
83.1
9.9.67.1
9.9.67
83.1.53
9.9.67.8
83.1.4
4.79.3
95
83.1
12.5
3.80.51
9.9.67.1.25
5.46.7
83.1.76
8.6.2.95
79.5.6
4
83.1.2
9.9.67.8.21
8
84.41
83.34.8
8
9.9.67.1
86.4.16
83.1.4
70.81.5.85
49.8
77.37.5.39
45.3.99
8
13.49
1.34
9.9.67.1
83.1.76
83.1.4
3
1.7.25
41.6.8
45.5.17
83.1
26
45.3.99
97
9.9.67.1.29
12.5.32
83.1.4.2
45.3.99.7
7.47.65.1
9.9.67.8.21.5
7.82
3.80.51
1.4.16
2.5
9.9.67
64.81.5.22
83.1.53
1.78.85.12
7.92
13.49.56
9.24
5.8.37.51
91
9.9.67.92
22.49.2.4
7
77.60
95.42.81.2
41.6.8.91
9.9.67.1
53.3.12
72.34.57
2.91
7.9.48.18
1.4.16
9.9.67.8.21.5
20.68
71.1
4
9.9.67.8.43
1.48.68.7
9.9.67.1.8
9
57.5.7.1
83.1.2
8
2.91.67
11.7.9
5.8.2.66
1.31.1.78
13.49.3
5.2.47
11.6.49.89
9.9.67
2.8.60.21
4.7.2
9.9.67.1
84.41.8
26
9.76.55
12
5.9
54
6.1
9.9.67.1
11.6.49.89.77
1.31.1.78.6
9.9.67.6.80
11.7.9.4
9.9.67.1.4
1.34.7
86.4.16.4
4.49.40
61
9.9.67.8.43.2
83.1.4.8
9.9.67.1.1
7.82
6.30.74.52
2.5.89.11
32.6.82
2.91.7
5
7.8
3
1.74
3.8.3
7.92
83.1.6
79.5.6
7.45.27.8
2.14.75
4.49.40.8
53.3.12
6.94.16.63
40.6
71.86
11
83.1.12
2.8.60.21.58
9.8.3
2.58.31.9
deveria ser
1.4.16
1.4.16
1.7.25
1.31.1.78
1.31.1.78.6
1.34
1.34.7
1.48.68.7
1.74
1.78.85.12
2.5
2.5.89.11
2.8.60.21
2.8.60.21.58
2.14.75
2.58.31.9
2.91
2.91.7
2.91.67
3
3
3.8.3
3.80.51
3.80.51
4
4
4.7.2
4.31.5
4.49.40
4.49.40.8
4.79.3
5
5.2.47
5.8.2.66
5.8.37.51
5.9
5.46.7
6.1
6.30.74.52
6.94.16.63
7
7.8
7.9.48.18
7.45.27.8
7.47.65.1
7.82
7.82
7.92
7.92
8
8
8
8
8.6.2.95
9
9.8.3
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.1.1
9.9.67.1.4
9.9.67.1.8
9.9.67.1.25
9.9.67.1.29
9.9.67.6
9.9.67.6.80
9.9.67.8
9.9.67.8.21
9.9.67.8.21.5
9.9.67.8.21.5
9.9.67.8.43
9.9.67.8.43.2
9.9.67.92
9.24
9.76.55
11
11.6.49.89
11.6.49.89.77
11.7.9
11.7.9.4
12
12.5
12.5.32
13.49
13.49.3
13.49.56
20.68
22.49.2.4
26
26
32.6.82
40.6
41.6.8
41.6.8.91
45.3.99
45.3.99
45.3.99.7
45.5.17
49.8
53.3.12
53.3.12
54
57.5.7.1
61
64.81.5.22
70.81.5.85
71.1
71.86
72.34.57
77.37.5.39
77.60
79.5.6
79.5.6
83.1
83.1
83.1
83.1
83.1.2
83.1.2
83.1.4
83.1.4
83.1.4
83.1.4.2
83.1.4.8
83.1.6
83.1.12
83.1.53
83.1.53
83.1.76
83.1.76
83.34.8
84.41
84.41.8
86.4.16
86.4.16.4
91
95
95.42.81.2
97
mas deu
5
4
3
26
4
8
97
3
9
8
61
91
26
8
12
11
8
54
95
7
1.74
1.34
1.4.16
1.4.16
1.7.25
1.31.1.78
1.31.1.78.6
1.34.7
1.48.68.7
1.78.85.12
2.91
2.5
2.5.89.11
2.8.60.21
2.8.60.21.58
2.14.75
2.58.31.9
2.91.67
2.91.7
3.8.3
3.80.51
3.80.51
4.7.2
4.31.5
4.49.40
4.49.40.8
4.79.3
5.9
5.2.47
5.8.2.66
5.8.37.51
5.46.7
6.1
6.30.74.52
6.94.16.63
7.8
7.92
7.92
7.82
7.82
7.9.48.18
7.45.27.8
7.47.65.1
8.6.2.95
9.24
9.8.3
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67
9.9.67.1
9.9.67.1
9.9.67.6
9.9.67.1
9.9.67.92
9.9.67.1
9.9.67.1
9.9.67.1
9.9.67.8
9.9.67.1
9.9.67.1.8
9.9.67.1.29
9.9.67.1.1
9.9.67.1.4
9.9.67.1.25
9.9.67.6.80
9.9.67.8.21
9.9.67.8.43
9.9.67.8.21.5
9.9.67.8.21.5
9.9.67.8.43.2
9.76.55
11.6.49.89
11.6.49.89.77
11.7.9
11.7.9.4
12.5
12.5.32
13.49
13.49.56
13.49.3
20.68
22.49.2.4
32.6.82
40.6
41.6.8
41.6.8.91
45.3.99
45.3.99
45.3.99.7
45.5.17
49.8
53.3.12
53.3.12
57.5.7.1
64.81.5.22
70.81.5.85
71.86
71.1
72.34.57
77.60
77.37.5.39
79.5.6
79.5.6
83.1
83.1
83.1
83.1
83.1.4
83.1.2
83.1.53
83.1.53
83.1.2
83.1.4
83.1.76
83.1.4
83.1.6
83.1.12
83.1.76
83.1.4.2
83.1.4.8
83.34.8
84.41
84.41.8
86.4.16
86.4.16.4
95.42.81.2

Teste 10 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
O resultado para
8.23
8.23.8
8.66.5.3
5.4.92
8.66.5.3
8.49.32
8.49.32
9.66
3.5
8.23.8
80.5.3.68
8.23.8.7
5.4
14.9.86
8.23.8.7.17
1.82
88.30.3.11
7.9.1.7
80.5.3.68.9
5.82.3.1
7.4.21.5
1
88.30.3.11.5
8.49.32.5
69.17.9
56.5.5
19
56.5.5
7.9.1.7.41
56.95.41.1
44.48
8.23.8
6.6
30.41.16.54
1.5
80.5.3.68.9.56
1
3.84.1
91.17
19.27
57.9.2
3.4.15
52.99.26.4
4.6.48
8.8
5.71.48
3.5
6.7.12.5
93.3
6.5.18.5
5.82.3.1
7.9.1.7.41
64.59
44.48.1
89.2.66
32
93.3.8
10
8.78.77.1
5.4.92
6.7.12.5.43
8.49.32.5
52.9.9.9
52.99.26.4.8
89
80.5.3.68
7
6.7.12.5.43.33
8.66.5.3.3
93.3
9.66.1
84.5
5.98.8.76
56.5.5.91
33
3
7.9.1.7.41
6.80
5.52.6
8.49.32.5
56.5.5.4
5.5
5.82.3.1
8.49.32
99.65.40.6
52.9.9.9.18
8
8.49.32.5.65
6.40.7
3.9.2
15.9
16.5
9.66
4.5.2.32
88.30.3.11.5.53
49
88.30.3.11.5.55
93.3
8.49.32.5.1
5.82.3.1
9.2.7
1.5
44.48.4
8.66.5.3
33
56.5.5.91.65
44.1
1.54
8.23.8.7.17.92
50.6.3.3
93.3
80.5.3.68.4
56.5.5.91
9
71.87
4.97.21.55
51.9.80
9.6
3
7.9.1.7.41.6
7.4.21.5
8.49.32.5
7.83.33
26.8
1
3.33
8.8
3.56.63.3
89.2
5.5.19
6.5.18.5.94
9.6
89.2.66
56.5.5.91.65.8
56.5.5.91.65.19
33.78
4.97.21.55
2
56.5.5.91.1
8.49.32.5.2
8.23.8.7.17.92
9.90
33.13
8.23.8.7
7.86
9.87
5.71.48
8.8.8
93.3
8.8.17
8
deveria ser
1
1
1
1.5
1.5
1.54
1.82
2
3
3
3.4.15
3.5
3.5
3.9.2
3.33
3.56.63.3
3.84.1
4.5.2.32
4.6.48
4.97.21.55
4.97.21.55
5.4
5.4.92
5.4.92
5.5
5.5.19
5.52.6
5.71.48
5.71.48
5.82.3.1
5.82.3.1
5.82.3.1
5.82.3.1
5.98.8.76
6.5.18.5
6.5.18.5.94
6.6
6.7.12.5
6.7.12.5.43
6.7.12.5.43.33
6.40.7
6.80
7
7.4.21.5
7.4.21.5
7.9.1.7
7.9.1.7.41
7.9.1.7.41
7.9.1.7.41
7.9.1.7.41.6
7.83.33
7.86
8
8
8.8
8.8
8.8.8
8.8.17
8.23
8.23.8
8.23.8
8.23.8
8.23.8.7
8.23.8.7
8.23.8.7.17
8.23.8.7.17.92
8.23.8.7.17.92
8.49.32
8.49.32
8.49.32
8.49.32.5
8.49.32.5
8.49.32.5
8.49.32.5
8.49.32.5.1
8.49.32.5.2
8.49.32.5.65
8.66.5.3
8.66.5.3
8.66.5.3
8.66.5.3.3
8.78.77.1
9
9.2.7
9.6
9.6
9.66
9.66
9.66.1
9.87
9.90
10
14.9.86
15.9
16.5
19
19.27
26.8
30.41.16.54
32
33
33
33.13
33.78
44.1
44.48
44.48.1
44.48.4
49
50.6.3.3
51.9.80
52.9.9.9
52.9.9.9.18
52.99.26.4
52.99.26.4.8
56.5.5
56.5.5
56.5.5.4
56.5.5.91
56.5.5.91
56.5.5.91.1
56.5.5.91.65
56.5.5.91.65.8
56.5.5.91.65.19
56.95.41.1
57.9.2
64.59
69.17.9
71.87
80.5.3.68
80.5.3.68
80.5.3.68.4
80.5.3.68.9
80.5.3.68.9.56
84.5
88.30.3.11
88.30.3.11.5
88.30.3.11.5.53
88.30.3.11.5.55
89
89.2
89.2.66
89.2.66
91.17
93.3
93.3
93.3
93.3
93.3
93.3.8
99.65.40.6
mas deu
33
3
49
2
32
8
1
19
10
1
9
89
1
7
33
3
8
1.54
1.82
1.5
1.5
3.33
3.5
3.5
3.4.15
3.9.2
3.56.63.3
3.84.1
4.5.2.32
4.6.48
4.97.21.55
4.97.21.55
5.5
5.4
5.4.92
5.4.92
5.5.19
5.52.6
5.71.48
5.71.48
5.82.3.1
5.82.3.1
5.82.3.1
5.82.3.1
5.98.8.76
6.6
6.80
6.5.18.5
6.5.18.5.94
6.7.12.5
6.7.12.5.43
6.7.12.5.43.33
6.40.7
7.86
7.4.21.5
7.4.21.5
7.9.1.7
7.9.1.7.41
7.9.1.7.41
7.9.1.7.41
7.9.1.7.41.6
7.83.33
8.8
8.23
8.8
8.8.17
8.8.8
8.23.8
8.23.8
8.23.8
8.23.8.7
8.23.8.7
8.23.8.7.17
8.23.8.7.17.92
8.23.8.7.17.92
8.49.32
8.49.32
8.49.32
8.49.32.5
8.49.32.5
8.49.32.5
8.49.32.5
8.49.32.5.2
8.49.32.5.65
8.49.32.5.1
8.66.5.3
8.66.5.3
8.66.5.3
8.66.5.3.3
8.78.77.1
9.6
9.6
9.90
9.66
9.87
9.66
9.2.7
9.66.1
14.9.86
15.9
16.5
19.27
26.8
30.41.16.54
33.13
33.78
44.48
44.1
44.48.4
44.48.1
50.6.3.3
51.9.80
52.9.9.9
52.9.9.9.18
52.99.26.4
52.99.26.4.8
56.5.5
56.5.5
56.5.5.91
56.5.5.4
56.5.5.91
56.5.5.91.65
56.5.5.91.1
56.5.5.91.65.8
56.5.5.91.65.19
56.95.41.1
57.9.2
64.59
69.17.9
71.87
80.5.3.68
80.5.3.68
80.5.3.68.4
80.5.3.68.9
80.5.3.68.9.56
84.5
88.30.3.11
88.30.3.11.5
88.30.3.11.5.55
88.30.3.11.5.53
89.2
89.2.66
89.2.66
91.17
93.3
93.3
93.3
93.3
93.3
93.3.8
99.65.40.6

Teste 11 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 12 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 13 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 14 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 15 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 16 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 17 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 18 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 19 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Teste 20 deu errado!
#include<iostream>
int main() {
    std::string v;
    std::vector<std::string> vs;
    while(std::cin >> v)
        vs.push_back(v);
    ordena_versoes(vs);
    for(auto v : vs)
        std::cout << v << std::endl;
    return 0;
}
Nota exercicio 10: 0.0
Procurando exercício 11...
Nota total: 8.60
{"scores": {"ex1": 1.0, "ex2": 1.0, "ex3": 0.6, "ex4": 1.0, "ex5": 1.0, "ex6": 1.0, "ex7": 1.0, "ex8": 1.0, "ex9": 1.0, "ex10": 0.0, "ex11": 0.0}}
